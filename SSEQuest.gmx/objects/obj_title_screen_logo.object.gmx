<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPresentationTitle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// -------------------------------------------------------

    SonicState      = 0;
    SonicYOffset    = 0;
    SonicFrame      = 0;
    
    Delay           = 0;
    State           = 0;
    ang_radius = 0;
    
    /// Variables
    title_y           = 0;
    title_menu_option = 0;
    title_menu_active = 0;
    title_menu_string = "START";
    alarm[0]          = 15;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Create Sparks ! */
alarm[1] = choose(10,20,15,25)
dummy_effect_create(spr_invincibility_sparkle,0.3,choose(68,50,80,110,226,131,187,270), choose(82,36,147,110,50,120,180,200,10),1, 1)

/// dummy_effect_create(sprite, image speed, x, y, depth, looptimes)
 // Creates a dummy effect.
/* Create a Dummy Effect 
   scr_dummy_effect(sprite, image speed, x, y, loop times, OPTIONAL! Depth of Dummy)
*/
 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Activate menu control.
   
    title_menu_active = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Up and Down and all Around!        
    ang_radius +=3
    y = ystart+lengthdir_y(6,ang_radius)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Thing
// --------------------------------------------------------------
    switch(SonicState) {
        case 0:
            if (Delay &lt; 60) Delay+=1;
            else            SonicState = 1;
            break;
        case 1:
            if (SonicYOffset &lt; 93) SonicYOffset+=3;
            else                   SonicState = 2;
            break;
        case 2:
            SonicFrame += 0.12;
            if (floor(SonicFrame) == 8) SonicFrame = 6;
            break;
    }


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change menu option.


 // Change options.
    if(title_menu_active == 1)
    {
       if(keyboard_check_pressed(global.key_right))
       {
          if(title_menu_option &lt; 3)
          {
             title_menu_option += 1;
          }
          else
          {
             title_menu_option = 0;
          }
       }
       if(keyboard_check_pressed(global.key_left))
       {
          if(title_menu_option &gt; 0)
          {
             title_menu_option -= 1;
          }
          else
          {
             title_menu_option = 3;
          }
       }       
    }
    
 // String.
    if(title_menu_active == 1)
    { 
       switch(title_menu_option)
       {
              case 0:
              {
                   title_menu_string = "START";
                   break;
              }
              case 1:
              {
                   title_menu_string = "TRIAL";
                   break;
              }
              case 2:
              {
                   title_menu_string = "OPTIONS";
                   break;
              }
              case 3:
              {
                   title_menu_string = "EXIT";
                   break;
              }
       }
    }
    
 // Choose.
    if(title_menu_active == 1)
    { 
       if(keyboard_check_pressed(global.key_enter))
       {
          title_menu_active = 0;
          switch(title_menu_option)
          {
                 case 0:
                 {
                      with(instance_create(0, 0, obj_fade_to_value))
                      {
                           value = rm_data_select;
                      }
                      break;
                 }
                 case 1:
                 {
                      with(instance_create(0, 0, obj_fade_to_value))
                      {
                           value = rm_time_attack;
                      }
                      break;
                 }
                 case 2:
                 {
                      with(instance_create(0, 0, obj_fade_to_value))
                      {
                           value = rm_options;
                      }
                      break;
                 }
                 case 3:
                 {
                      game_end();
                      break;
                 }
          }
       }    
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    // --- Draw Title ----------------------------------------
    draw_sprite(sprPresentationTitle, 0, global.screen_width/2, 100);
    
    // --- Draw Sonic ----------------------------------------
    switch(SonicState) {
        case 1:
            draw_sprite_part(sprPresentationSonic,  floor(SonicFrame), 0, 0, 85, SonicYOffset, global.screen_width/2, 112-SonicYOffset);
            break;
        case 2:
            draw_sprite(sprPresentationSonic, floor(SonicFrame), global.screen_width/2, 112-SonicYOffset);
            break;
    }
    
    // --- Draw Subtitle / Title band ------------------------
    draw_sprite(sprPresentationTitleBand, 0, global.screen_width/2, 135);
    draw_sprite(sprPresentationSubtitle, 0, global.screen_width/2, 180);
       
    // Draw menu.
    draw_set_color(c_yellow);
    draw_set_font(global.main_font);
    draw_set_halign(fa_center);
    draw_text(global.screen_width/2, global.screen_height-16, "- "+string(title_menu_string)+" -")
    draw_set_halign(-1);
    
    
    /*    // --- Draw Title ----------------------------------------
    draw_sprite(sprPresentationTitle, 0, 160, 100);
    
    // --- Draw Sonic ----------------------------------------
    switch(SonicState) {
        case 1:
            draw_sprite_part(sprPresentationSonic,  floor(SonicFrame), 0, 0, 85, SonicYOffset, 118, 112-SonicYOffset);
            break;
        case 2:
            draw_sprite(sprPresentationSonic, floor(SonicFrame), 118, 112-SonicYOffset);
            break;
    }
    
    // --- Draw Subtitle / Title band ------------------------
    draw_sprite(sprPresentationTitleBand, 0, 160, 135);
    draw_sprite(sprPresentationSubtitle, 0, 160, 180);
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
