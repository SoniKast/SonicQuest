<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initializes the animator and spawns all pieces.

 // Int.
    global.animTick = -1; // Initialize the global animation ticker.
    global.scale    =  2;
    global.sndPlay  = false;
    x               = room_width  / 2;
    y               = room_height / 2;
 
 // Parts:

    var ringLayer = 3;
    object_set_sprite(obj_sage_bouncer, sageLogo);
    var instSpawn = instance_create(x, y, obj_sage_bouncer);
    with (instSpawn) 
    {
        depth = ringLayer;
        bounceSpd = 0;
        animDelay = 0;
    }

    var bannerLayer = 2;
    object_set_sprite(obj_sage_bouncer, sageLogo_banner);
    instSpawn = instance_create(x, y + (34 * global.scale),  obj_sage_bouncer);
    with (instSpawn) 
    {
       depth = bannerLayer;
       bounceSpd = 0;
       animDelay = 0.125;
    }

    object_set_sprite(obj_sage_bouncer, sageLogo_bannerOut);
    instSpawn = instance_create(x, y + (34 * global.scale), obj_sage_bouncer);
    with (instSpawn) 
    {
       depth = ringLayer;
       bounceSpd = 0;
       animDelay = 0.125;
    }

 // Create the "SAGE" letters
    var letterLayer = 1;
    for (var i = 3; i &gt;= 0; i--) 
    {
        switch (i) 
        {
            case 0: object_set_sprite(obj_sage_bouncer, sageLogo_S); break;
            case 1: object_set_sprite(obj_sage_bouncer, sageLogo_A); break;
            case 2: object_set_sprite(obj_sage_bouncer, sageLogo_G); break;
            case 3: object_set_sprite(obj_sage_bouncer, sageLogo_E); break;
        }
        instSpawn = instance_create(x - (29 * global.scale) + (i * 20 * global.scale), y + (28 * global.scale), obj_sage_bouncer);
        with (instSpawn) 
        {
            depth = letterLayer;
            bounceSpd = 0;
            animDelay = 0.5 + (0.1 * i);
        }
    }

 // Create the wings of the logo emblem
    instSpawn = instance_create(x - (49 * global.scale), y + (2 * global.scale), obj_sage_wing);
    with (instSpawn) 
    {
        depth = ringLayer;
        bounceSpd = 0;
        flip = 1;
    }
    instSpawn = instance_create(x + (49 * global.scale), y + (2 * global.scale), obj_sage_wing);
    with (instSpawn) 
    {
        depth = ringLayer;
        bounceSpd = 0;
        flip = -1;
    }

 // Create the "20TH" text at the center of the ring
    var zeroLayer = 0;
    object_set_sprite(obj_sage_bouncer, sageLogo_2);
    var instSpawn = instance_create(x - (9 * global.scale), y - (11 * global.scale), obj_sage_bouncer);
    with (instSpawn) 
    {
        depth = bannerLayer;
        bounceSpd = 0;
        animDelay = 1.0;
    }
    object_set_sprite(obj_sage_bouncer, sageLogo_0);
    var instSpawn = instance_create(x + (9 * global.scale), y - (11 * global.scale), obj_sage_bouncer);
    with (instSpawn) 
    {
        depth = letterLayer;
        bounceSpd = 0;
        animDelay = 1.2;
    }
    object_set_sprite(obj_sage_bouncer, sageLogo_t);
    var instSpawn = instance_create(x + (14 * global.scale), y + (3 * global.scale), obj_sage_bouncer);
    with (instSpawn) 
    {
        depth = zeroLayer;
        bounceSpd = 0;
        animDelay = 1.4;
    }
    object_set_sprite(obj_sage_bouncer, sageLogo_h);
    var instSpawn = instance_create(x + (23 * global.scale), y + (3 * global.scale), obj_sage_bouncer);
    with (instSpawn) 
    {
        depth = zeroLayer;
        bounceSpd = 0;
        animDelay = 1.6;
    }

 // Create the "Since 2000" text
    object_set_sprite(obj_sage_bouncer, sageLogo_smallText);
    var instSpawn = instance_create(x, y + (46 * global.scale), obj_sage_bouncer);
    with (instSpawn) 
    {
        depth = letterLayer;
        bounceSpd = 0;
        animDelay = 1.8;
    }
 // Create the "20th Anniversary" text
    object_set_sprite(obj_sage_bouncer, sageLogo_20thAnniv);
    var instSpawn = instance_create(x, y - (47 * global.scale), obj_sage_bouncer);
    with (instSpawn) 
    {
        depth =  letterLayer;
        bounceSpd = 0;
        animDelay = 1.6;
    }


    instSpawn = instance_create(x, y, obj_sage_star);
    with (instSpawn) 
    {
        depth = letterLayer;
        targetAngle = pi;
        animDelay = 1.5;
    }
    instSpawn = instance_create(x, y, obj_sage_star);
    with (instSpawn) 
    {
        depth = letterLayer;
        targetAngle = (4 * pi) / 5;
        animDelay = 1.55;
    }
    instSpawn = instance_create(x, y, obj_sage_star);
    with (instSpawn) 
    {
        depth = letterLayer;
        targetAngle = pi / 5;
        animDelay = 1.8;
    }
    instSpawn = instance_create(x, y, obj_sage_star);
    with (instSpawn) 
    {
        depth = letterLayer;
        targetAngle = 0;
        animDelay = 1.9;
    } 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Increments the anim ticker

    global.animTick += delta_time * 0.000001;

    // If it's time to play the jingle...
        if (global.animTick &gt; 0 &amp;&amp; !global.sndPlay)
        {
            global.sndPlay = true;
            aud_play_sound(sageSnd_SEGAVintage, global.sfx_volume, 1, 0, 0); // Play the SEGA Vintage jingle
        }

    // If it's time to make like a tree and get outta here...
        if (global.animTick &gt;= 4.0)
        {
            if room_exists(room_next(room)) instance_create(x, y, obj_fade_next);
        }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
